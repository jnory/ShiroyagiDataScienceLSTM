#!/usr/bin/env python
from __future__ import print_function

import os
import subprocess


def configure():
    from IPython.lib import passwd
    basedir = os.path.dirname(
        os.path.abspath(__file__))
    path = os.path.join(basedir, "config/dot.jupyter/passwd")
    with open(path, "w") as fp:
        h = passwd()
        print(h, file=fp)


def build():
    subprocess.call(
        "nvidia-docker build -t shiroyagi_datascience_jnory_dl .".split())


def run():
    import scripts.create_options as co
    options = co.create()
    command = (
        ['nvidia-docker', 'run', '-d', '--name', 'jupyter']
        + options
        + ['shiroyagi_datascience_jnory_dl', 'sh', '-c', 'jupyter notebook'])
    print(command)

    subprocess.call(command)


def rm():
    subprocess.call(
        "nvidia-docker rm -f jupyter".split())


def get_parser():
    import argparse
    parser = argparse.ArgumentParser()

    subparsers = parser.add_subparsers()
    p_configure = subparsers.add_parser("configure")
    p_configure.set_defaults(func=configure)
    p_build = subparsers.add_parser("build")
    p_build.set_defaults(func=build)
    p_run = subparsers.add_parser("run")
    p_run.set_defaults(func=run)
    p_rm = subparsers.add_parser("rm")
    p_rm.set_defaults(func=rm)

    return parser


if __name__ == '__main__':
    get_parser().parse_args().func()
